{"ast":null,"code":"import { ref, onMounted } from 'vue';\nexport default {\n  setup() {\n    const selectedDate = ref(new Date());\n    const events = ref([]);\n\n    // Функция для изменения даты\n    function changeDay(step) {\n      selectedDate.value.setDate(selectedDate.value.getDate() + step);\n      fetchEvents(); // Загружаем события для новой даты\n    }\n\n    // Функция для загрузки событий\n    async function fetchEvents() {\n      const response = await fetch(`https://api.example.com/events?date=${selectedDate.value.toISOString().slice(0, 10)}`);\n      const data = await response.json();\n      events.value = data.events;\n    }\n\n    // Первоначальная загрузка событий\n    onMounted(() => {\n      fetchEvents();\n    });\n    return {\n      selectedDate,\n      events,\n      changeDay\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","setup","selectedDate","Date","events","changeDay","step","value","setDate","getDate","fetchEvents","response","fetch","toISOString","slice","data","json"],"sources":["E:\\yoga_kurs\\src\\components\\schedule_element.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"changeDay(-1)\">Предыдущий день</button>\r\n    <span>{{ selectedDate.value.toLocaleDateString() }}</span>\r\n    <button @click=\"changeDay(1)\">Следующий день</button>\r\n\r\n    <div v-for=\"event in events\" :key=\"event.id\" class=\"event\">\r\n      <h2>{{ event.title }}</h2>\r\n      <p>{{ event.time }} - {{ event.date }}</p>\r\n      <p>Инструктор: {{ event.instructor }}</p>\r\n      <p>Еще {{ event.spots }} мест(а)</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const selectedDate = ref(new Date());\r\n    const events = ref([]);\r\n\r\n    // Функция для изменения даты\r\n    function changeDay(step) {\r\n      selectedDate.value.setDate(selectedDate.value.getDate() + step);\r\n      fetchEvents(); // Загружаем события для новой даты\r\n    }\r\n\r\n    // Функция для загрузки событий\r\n    async function fetchEvents() {\r\n      const response = await fetch(`https://api.example.com/events?date=${selectedDate.value.toISOString().slice(0, 10)}`);\r\n      const data = await response.json();\r\n      events.value = data.events;\r\n    }\r\n\r\n    // Первоначальная загрузка событий\r\n    onMounted(() => {\r\n      fetchEvents();\r\n    });\r\n\r\n    return {\r\n      selectedDate,\r\n      events,\r\n      changeDay\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n  <style>\r\n  .schedule {\r\n    background: #333;\r\n    color: #fff;\r\n    padding: 20px;\r\n  }\r\n  .event {\r\n    background: #444;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  h1, h2 {\r\n    color: #acd0f0;\r\n    font-weight: 700;\r\n    font-size: 30px;\r\n  }\r\n  </style>\r\n  \r\n"],"mappings":"AAgBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,YAAW,GAAIH,GAAG,CAAC,IAAII,IAAI,CAAC,CAAC,CAAC;IACpC,MAAMC,MAAK,GAAIL,GAAG,CAAC,EAAE,CAAC;;IAEtB;IACA,SAASM,SAASA,CAACC,IAAI,EAAE;MACvBJ,YAAY,CAACK,KAAK,CAACC,OAAO,CAACN,YAAY,CAACK,KAAK,CAACE,OAAO,CAAC,IAAIH,IAAI,CAAC;MAC/DI,WAAW,CAAC,CAAC,EAAE;IACjB;;IAEA;IACA,eAAeA,WAAWA,CAAA,EAAG;MAC3B,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAE,uCAAsCV,YAAY,CAACK,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAE,EAAC,CAAC;MACpH,MAAMC,IAAG,GAAI,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,MAAM,CAACG,KAAI,GAAIQ,IAAI,CAACX,MAAM;IAC5B;;IAEA;IACAJ,SAAS,CAAC,MAAM;MACdU,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,OAAO;MACLR,YAAY;MACZE,MAAM;MACNC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}