{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"../styles/style_reg_join\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      emailChecked: false,\n      emailExists: false,\n      user: {\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        birthDate: \"\"\n      }\n    };\n  },\n  methods: {\n    async checkEmail() {\n      try {\n        let response = await fetch('your_api_endpoint/check-email', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: this.email\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        let data = await response.json();\n        this.emailChecked = true;\n        this.emailExists = data.exists;\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    async registerUser() {\n      try {\n        let response = await fetch('your_api_endpoint/register', {\n          method: 'POST',\n          body: JSON.stringify(this.user),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        let data = await response.json();\n        if (data.success) {\n          this.$router.push('/main/welcome');\n        } else {\n          alert('Произошла ошибка при регистрации: ' + JSON.stringify(data.errors));\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","email","emailChecked","emailExists","user","firstName","lastName","phoneNumber","birthDate","methods","checkEmail","response","fetch","method","body","JSON","stringify","headers","json","exists","error","console","registerUser","success","$router","push","alert","errors"],"sources":["E:\\yoga_kurs\\src\\components\\join_page.vue"],"sourcesContent":["<template>\r\n    <div class=\"bg\">\r\n        <div class=\"container\">\r\n            <h1>Добро пожаловать в систему!</h1>\r\n            <form v-if=\"!emailChecked\">\r\n                <label for=\"email_in\">Введите свой email:</label>\r\n                <input type=\"email\" v-model=\"email\" placeholder=\"example@gmail.com\">\r\n                <button @click.prevent=\"checkEmail()\">Далее</button>\r\n            </form>\r\n            <form v-else-if=\"emailExists\">\r\n                // TODO: Форма для входа (нужен дополнительный API endpoint)\r\n            </form>\r\n            <form v-else>\r\n                <input type=\"text\" v-model=\"user.firstName\" placeholder=\"Имя\">\r\n                <input type=\"text\" v-model=\"user.lastName\" placeholder=\"Фамилия\">\r\n                <input type=\"tel\" v-model=\"user.phoneNumber\" placeholder=\"Номер телефона\">\r\n                <input type=\"date\" v-model=\"user.birthDate\" placeholder=\"Дата рождения\">\r\n                <button @click.prevent=\"registerUser()\">Зарегистрироваться</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport \"../styles/style_reg_join\"\r\nexport default {\r\n    data() {\r\n        return {\r\n            email: \"\",\r\n            emailChecked: false,\r\n            emailExists: false,\r\n            user: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                phoneNumber: \"\",\r\n                birthDate: \"\"\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        async checkEmail() {\r\n            try {\r\n                let response = await fetch('your_api_endpoint/check-email', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ email: this.email }),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                });\r\n                let data = await response.json();\r\n                this.emailChecked = true;\r\n                this.emailExists = data.exists;\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        },\r\n        async registerUser() {\r\n            try {\r\n                let response = await fetch('your_api_endpoint/register', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(this.user),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                });\r\n                let data = await response.json();\r\n                if (data.success) {\r\n                    this.$router.push('/main/welcome');\r\n                } else {\r\n                    alert('Произошла ошибка при регистрации: ' + JSON.stringify(data.errors));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n"],"mappings":";AAwBA,OAAO,0BAAyB;AAChC,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,KAAK;MAClBC,IAAI,EAAE;QACFC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACf;IACJ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,IAAIC,QAAO,GAAI,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UACxDC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEf,KAAK,EAAE,IAAI,CAACA;UAAM,CAAC,CAAC;UAC3CgB,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAClD,CAAC,CAAC;QACF,IAAIjB,IAAG,GAAI,MAAMW,QAAQ,CAACO,IAAI,CAAC,CAAC;QAChC,IAAI,CAAChB,YAAW,GAAI,IAAI;QACxB,IAAI,CAACC,WAAU,GAAIH,IAAI,CAACmB,MAAM;MAClC,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAClC;IACJ,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACjB,IAAI;QACA,IAAIX,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACrDC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,IAAI,CAAC;UAC/Ba,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAClD,CAAC,CAAC;QACF,IAAIjB,IAAG,GAAI,MAAMW,QAAQ,CAACO,IAAI,CAAC,CAAC;QAChC,IAAIlB,IAAI,CAACuB,OAAO,EAAE;UACd,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;QACtC,OAAO;UACHC,KAAK,CAAC,oCAAmC,GAAIX,IAAI,CAACC,SAAS,CAAChB,IAAI,CAAC2B,MAAM,CAAC,CAAC;QAC7E;MACJ,EAAE,OAAOP,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAClC;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}