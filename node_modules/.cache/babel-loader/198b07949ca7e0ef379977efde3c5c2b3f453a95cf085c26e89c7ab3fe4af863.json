{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bg\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Добро пожаловать в систему!\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email_in\"\n}, \"Введите свой email:\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, !$data.emailChecked ? (_openBlock(), _createElementBlock(\"form\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    placeholder: \"example@gmail.com\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => $options.checkEmail(), [\"prevent\"]))\n  }, \"Далее\")])) : $data.emailExists ? (_openBlock(), _createElementBlock(\"form\", _hoisted_6, \" // TODO: Форма для входа (нужен дополнительный API endpoint) \")) : (_openBlock(), _createElementBlock(\"form\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.firstName = $event),\n    placeholder: \"Имя\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.firstName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.user.lastName = $event),\n    placeholder: \"Фамилия\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.lastName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.user.phoneNumber = $event),\n    placeholder: \"Номер телефона\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.phoneNumber]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.user.birthDate = $event),\n    placeholder: \"Дата рождения\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.birthDate]]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = _withModifiers($event => $options.registerUser(), [\"prevent\"]))\n  }, \"Зарегистрироваться\")]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$data","emailChecked","_hoisted_4","_hoisted_5","type","_cache","$event","email","placeholder","onClick","_withModifiers","$options","checkEmail","emailExists","_hoisted_6","_hoisted_7","user","firstName","lastName","phoneNumber","birthDate","registerUser"],"sources":["E:\\yoga_kurs\\src\\components\\join_page.vue"],"sourcesContent":["<template>\r\n    <div class=\"bg\">\r\n        <div class=\"container\">\r\n            <h1>Добро пожаловать в систему!</h1>\r\n            <form v-if=\"!emailChecked\">\r\n                <label for=\"email_in\">Введите свой email:</label>\r\n                <input type=\"email\" v-model=\"email\" placeholder=\"example@gmail.com\">\r\n                <button @click.prevent=\"checkEmail()\">Далее</button>\r\n            </form>\r\n            <form v-else-if=\"emailExists\">\r\n                // TODO: Форма для входа (нужен дополнительный API endpoint)\r\n            </form>\r\n            <form v-else>\r\n                <input type=\"text\" v-model=\"user.firstName\" placeholder=\"Имя\">\r\n                <input type=\"text\" v-model=\"user.lastName\" placeholder=\"Фамилия\">\r\n                <input type=\"tel\" v-model=\"user.phoneNumber\" placeholder=\"Номер телефона\">\r\n                <input type=\"date\" v-model=\"user.birthDate\" placeholder=\"Дата рождения\">\r\n                <button @click.prevent=\"registerUser()\">Зарегистрироваться</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            email: \"\",\r\n            emailChecked: false,\r\n            emailExists: false,\r\n            user: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                phoneNumber: \"\",\r\n                birthDate: \"\"\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        async checkEmail() {\r\n            try {\r\n                let response = await fetch('your_api_endpoint/check-email', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ email: this.email }),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                });\r\n                let data = await response.json();\r\n                this.emailChecked = true;\r\n                this.emailExists = data.exists;\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        },\r\n        async registerUser() {\r\n            try {\r\n                let response = await fetch('your_api_endpoint/register', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(this.user),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                });\r\n                let data = await response.json();\r\n                if (data.success) {\r\n                    this.$router.push('/main/welcome');\r\n                } else {\r\n                    alert('Произошла ошибка при регистрации: ' + JSON.stringify(data.errors));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAI;;EACNA,KAAK,EAAC;AAAW;gCAClBC,mBAAA,CAAoC,YAAhC,6BAA2B;;EAH3CC,GAAA;AAAA;gCAKgBD,mBAAA,CAAiD;EAA1CE,GAAG,EAAC;AAAU,GAAC,qBAAmB;;EALzDD,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIE,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBFJ,mBAAA,CAiBM,OAjBNK,UAiBM,GAhBFC,UAAoC,E,CACvBC,KAAA,CAAAC,YAAY,I,cAAzBL,mBAAA,CAIO,QARnBM,UAAA,GAKgBC,UAAiD,E,gBACjDV,mBAAA,CAAoE;IAA7DW,IAAI,EAAC,OAAO;IANnC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM6CN,KAAA,CAAAO,KAAK,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAnBR,KAAA,CAAAO,KAAK,E,GAClCd,mBAAA,CAAoD;IAA3CgB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAP9BK,cAAA,CAAAJ,MAAA,IAOwCK,QAAA,CAAAC,UAAU;KAAI,OAAK,E,KAE9BZ,KAAA,CAAAa,WAAW,I,cAA5BjB,mBAAA,CAEO,QAXnBkB,UAAA,EAS0C,gEAE9B,M,cACAlB,mBAAA,CAMO,QAlBnBmB,UAAA,G,gBAagBtB,mBAAA,CAA8D;IAAvDW,IAAI,EAAC,MAAM;IAblC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAa4CN,KAAA,CAAAgB,IAAI,CAACC,SAAS,GAAAX,MAAA;IAAEE,WAAW,EAAC;iDAA5BR,KAAA,CAAAgB,IAAI,CAACC,SAAS,E,mBAC1CxB,mBAAA,CAAiE;IAA1DW,IAAI,EAAC,MAAM;IAdlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAc4CN,KAAA,CAAAgB,IAAI,CAACE,QAAQ,GAAAZ,MAAA;IAAEE,WAAW,EAAC;iDAA3BR,KAAA,CAAAgB,IAAI,CAACE,QAAQ,E,mBACzCzB,mBAAA,CAA0E;IAAnEW,IAAI,EAAC,KAAK;IAfjC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe2CN,KAAA,CAAAgB,IAAI,CAACG,WAAW,GAAAb,MAAA;IAAEE,WAAW,EAAC;iDAA9BR,KAAA,CAAAgB,IAAI,CAACG,WAAW,E,mBAC3C1B,mBAAA,CAAwE;IAAjEW,IAAI,EAAC,MAAM;IAhBlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgB4CN,KAAA,CAAAgB,IAAI,CAACI,SAAS,GAAAd,MAAA;IAAEE,WAAW,EAAC;iDAA5BR,KAAA,CAAAgB,IAAI,CAACI,SAAS,E,GAC1C3B,mBAAA,CAAmE;IAA1DgB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAjB9BK,cAAA,CAAAJ,MAAA,IAiBwCK,QAAA,CAAAU,YAAY;KAAI,oBAAkB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}